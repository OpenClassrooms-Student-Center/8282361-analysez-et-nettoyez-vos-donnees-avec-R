---
title: "Analyse descriptive bivariée"
author: "Marie Vaugoyeau"
date: "2024/02/11"
format: 
  pdf:
    toc: true
    toc-depth: 2
    number-sections: true
editor: visual
---

# introduction

## jeu de données

Le jeu de données est disponible sur la page du cours d'OC.

## import des packages

```{r}
library(multcomp)
library(tidyverse)
library(fmsb)
library(sf)
library(leaflet)
```

## import des données

```{r}

donnees_temperature <- read_csv(
  "data/donnees_temperature_corrigees.csv",
  col_types = c("fDfnnnfffnffnnn")
  )

# réordonne les modalités des variables département, region et code_insee_departement
donnees_temperature <- donnees_temperature |> 
  mutate(
    departement = fct_relevel(donnees_temperature$departement, sort),
    region = fct_relevel(donnees_temperature$region, sort),
    code_insee_departement = fct_inseq(donnees_temperature$code_insee_departement)
  )

summary(donnees_temperature)
```

# analyse descriptive bivariée

## quanti - quanti 
### tmin et tmoy
```{r}
# représentation graphique  
donnees_temperature |> 
  ggplot() +
  aes(x = tmoy, y = tmin) +
  geom_point(alpha  = 0.2, size = 0.2) +
  theme_classic()

# calcul de l'équation linéaire
regression_lineaire <- lm(tmin ~ tmoy, data = donnees_temperature)
## coefficient
regression_lineaire
# validation du modèle (montré les résidus)
summary(regression_lineaire)

# visualisation graphique
donnees_temperature |> 
  ggplot() +
  aes(x = tmoy, y = tmin) +
  geom_point(alpha  = 0.2, size = 0.2) +
  geom_abline(aes(slope = 0.86, intercept = -2.93), color = "red") +
  theme_classic()

# autre visualisation
donnees_temperature |> 
  ggplot() +
  aes(x = tmoy, y = tmin) +
  geom_point(alpha  = 0.2, size = 0.2) +
  geom_smooth(method = "lm") +
  geom_abline(aes(slope = 0.86, intercept = -2.93), color = "red") +
  ggpubr::stat_regline_equation() +
  theme_classic()

```
  
### tmin et max  
```{r}
# représentation graphique  
donnees_temperature |> 
  ggplot() +
  aes(x = tmin, y = tmax) +
  geom_point(alpha  = 0.2, size = 0.2) +
  theme_classic()

# calcul de l'équation linéaire
regression_lineaire <- lm(tmax ~ tmin, data = donnees_temperature)
## coefficient
regression_lineaire
# validation du modèle (montré les résidus)
summary(regression_lineaire)

# autre visualisation
donnees_temperature |> 
  ggplot() +
  aes(x = tmin, y = tmax) +
  geom_point(alpha  = 0.2, size = 0.2) +
  geom_smooth(method = "lm") +
  ggpubr::stat_regline_equation() +
  theme_classic()
```
Oui la température maximale est liée à la température minimale selon l'équation : tmax ~ `r regression_lineaire$coefficients[2]` * tmin + `r regression_lineaire$coefficients[1]`  
  
### tmin et densité de population  
```{r}
# représentation graphique  
donnees_temperature |> 
  ggplot() +
  aes(x = tmin, y = densite_humaine_par_km_carre ) +
  geom_point(alpha  = 0.2, size = 0.2) +
  theme_classic()
```
Il n'y a pas de lien visible à cause des points extrêmes en densité mais aussi à cause de la variation des températures minimales toutes l'année.  

